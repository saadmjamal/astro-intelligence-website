// NOTE This file is auto-generated by Contentlayer

import type { Markdown, MDX, ImageFieldData, IsoDateTimeString } from 'contentlayer2/core'
import * as Local from 'contentlayer2/source-files'

export { isType } from 'contentlayer2/client'

export type { Markdown, MDX, ImageFieldData, IsoDateTimeString }

/** Document types */
export type CaseStudy = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'CaseStudy'
  title: string
  client: string
  date: IsoDateTimeString
  industry: string
  services: string[]
  metrics: any
  excerpt: string
  image?: string | undefined
  featuredImage?: string | undefined
  tags?: string[] | undefined
  images?: any[] | undefined
  beforeAfter?: any | undefined
  architectureDiagrams?: any[] | undefined
  /** MDX file body */
  body: MDX
  url: string
  slug: string
}

export type Post = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Post'
  title: string
  date: IsoDateTimeString
  author: string
  excerpt: string
  tags: string[]
  image?: string | undefined
  series?: string | undefined
  /** MDX file body */
  body: MDX
  url: string
  slug: string
}

export type ResearchArticle = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'ResearchArticle'
  title: string
  date: IsoDateTimeString
  authors: string[]
  abstract: string
  category: string
  tags: string[]
  externalUrl?: string | undefined
  /** MDX file body */
  body: MDX
  url: string
  slug: string
}  

/** Nested types */
  

/** Helper types */

export type AllTypes = DocumentTypes | NestedTypes
export type AllTypeNames = DocumentTypeNames | NestedTypeNames

export type DocumentTypes = CaseStudy | Post | ResearchArticle
export type DocumentTypeNames = 'CaseStudy' | 'Post' | 'ResearchArticle'

export type NestedTypes = never
export type NestedTypeNames = never

export type DataExports = {
  allDocuments: DocumentTypes[]
  allPosts: Post[]
  allCaseStudies: CaseStudy[]
  allResearchArticles: ResearchArticle[]
}


export interface ContentlayerGenTypes {
  documentTypes: DocumentTypes
  documentTypeMap: DocumentTypeMap
  documentTypeNames: DocumentTypeNames
  nestedTypes: NestedTypes
  nestedTypeMap: NestedTypeMap
  nestedTypeNames: NestedTypeNames
  allTypeNames: AllTypeNames
  dataExports: DataExports
}

declare global {
  interface ContentlayerGen extends ContentlayerGenTypes {}
}

export type DocumentTypeMap = {
  CaseStudy: CaseStudy
  Post: Post
  ResearchArticle: ResearchArticle
}

export type NestedTypeMap = {

}

 